<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>60.0</apiVersion>
    <decisions>
        <name>Assign_MyCase_or_LawPay_Brand</name>
        <label>Assign MyCase or LawPay Brand</label>
        <locationX>182</locationX>
        <locationY>503</locationY>
        <defaultConnector>
            <targetReference>Update_Account_LawPay</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>LawPay</defaultConnectorLabel>
        <rules>
            <name>MyCase</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.X6Sense_Segment__c</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>MyCase_6QA</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Account</targetReference>
            </connector>
            <label>MyCase</label>
        </rules>
    </decisions>
    <decisions>
        <name>Check_for_Eligibility</name>
        <label>Check for Eligibility</label>
        <locationX>380</locationX>
        <locationY>395</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_is_Eligible</name>
            <conditionLogic>1 AND 2 AND 3 AND 4 AND (9 OR 10) AND (5 OR 6 OR 7 OR 8)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Internal</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Competitor</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Name</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Partner</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Number_of_Open_Opportunities__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_User.IsActive</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Get_User.Name</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>Integration</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.LastActivityDate</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.LastActivityDate</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>fx_30DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Last_MQA_Date__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.Last_MQA_Date__c</leftValueReference>
                <operator>LessThan</operator>
                <rightValue>
                    <elementReference>fx_30DaysAgo</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_MyCase_or_LawPay_Brand</targetReference>
            </connector>
            <label>Yes is Eligible</label>
        </rules>
    </decisions>
    <description>3/4/2024 - Updated flow to include additional eligibility and made updates to the start trigger</description>
    <environments>Default</environments>
    <formulas>
        <name>fx_30DaysAgo</name>
        <dataType>Date</dataType>
        <expression>TODAY() -30</expression>
    </formulas>
    <interviewLabel>Account: Automate Last MQA Fields {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Account: Automate Last MQA Brand Field</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_User</name>
        <label>Get User</label>
        <locationX>380</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_for_Eligibility</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.OwnerId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Update Account with Last MQA Date, Assign MQA and the correct Last MQA Brand</description>
        <name>Update_Account</name>
        <label>Update Account</label>
        <locationX>50</locationX>
        <locationY>611</locationY>
        <inputAssignments>
            <field>Assign_MQA__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Last_MQA_Brand__c</field>
            <value>
                <stringValue>MyCase</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Last_MQA_Date__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Account_LawPay</name>
        <label>Update Account LawPay</label>
        <locationX>314</locationX>
        <locationY>611</locationY>
        <inputAssignments>
            <field>Assign_MQA__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Last_MQA_Brand__c</field>
            <value>
                <stringValue>LawPay</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Last_MQA_Date__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>254</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_User</targetReference>
        </connector>
        <filterFormula>{!$Record.Bypass_VR_and_Automation__c} = FALSE &amp;&amp;
(
  (
    CONTAINS({!$Record.X6Sense_Segment__c}, &quot;LawPay_6QA&quot;) &amp;&amp; (NOT(CONTAINS({!$Record__Prior.X6Sense_Segment__c}, &quot;LawPay_6QA&quot;)) || ISBLANK({!$Record__Prior.X6Sense_Segment__c}))
  ) ||
  (
    CONTAINS({!$Record.X6Sense_Segment__c}, &quot;MyCase_6QA&quot;) &amp;&amp; (NOT(CONTAINS({!$Record__Prior.X6Sense_Segment__c}, &quot;MyCase_6QA&quot;)) || ISBLANK({!$Record__Prior.X6Sense_Segment__c}))
  )
)</filterFormula>
        <object>Account</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordBeforeSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
